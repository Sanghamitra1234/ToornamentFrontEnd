{"version":3,"sources":["Containers/Tournaments/TournamentsShow.module.css","Components/Component/GamesShow.module.css","Containers/Tournaments/Tournaments.module.css","Components/Component/GamesShow.js","HOC/Auxilary.js","Containers/Games.js","Containers/Layouts/Modal.js","Containers/Tournaments/TournamentsShow.js","Containers/Tournaments/Tournaments.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gamesShow","gameNameHandler","gameName","path","props","history","push","className","styles","Container","this","games","map","index","card","key","cardTitle","cardText","gameDesc","btn","onClick","Component","withRouter","Auxilary","children","Games","state","gData","length","setState","GamesShow","fontFamily","textAlign","fontSize","ModalExample","style","open","show","onClose","close","res","TournamentsShow","response","showModal","maxPeeps","tournamentRegisterHandler","tournamentName","axios","get","then","data","console","log","message","reRenderToornamentPage","window","location","reload","closeModal","maxPeople","tournament","names","tournaments","title","desc","tournamentDesc","registrationFees","sale","button","container","Modal","Tournaments","pageNumber","getGamesHandler","match","params","id","handlePageChange","activePage","bind","pageDecrementHandler","pageReduce","pageIncrementHandler","pageIncrement","paginator","App","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff61d438.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TournamentsShow_title__3GvbL\",\"container\":\"TournamentsShow_container__2drDG\",\"card\":\"TournamentsShow_card__1sytj\",\"desc\":\"TournamentsShow_desc__QclK9\",\"button\":\"TournamentsShow_button__1eZun\",\"btn\":\"TournamentsShow_btn__XwVMj\",\"hover\":\"TournamentsShow_hover__3FPTV\",\"active\":\"TournamentsShow_active__28ioN\",\"sale\":\"TournamentsShow_sale__166Ve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GamesShow_Container__1Blkc\",\"card\":\"GamesShow_card__1Zggv\",\"cardTitle\":\"GamesShow_cardTitle__1iix_\",\"cardText\":\"GamesShow_cardText__IX0QE\",\"btn\":\"GamesShow_btn__y-ZJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Tournaments_paginator__1gka7\",\"btn\":\"Tournaments_btn__2B32E\"};","import React,{Component} from 'react';\r\nimport styles from './GamesShow.module.css';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass gamesShow extends Component {\r\n    gameNameHandler=(gameName)=>{\r\n        //console.log(gameName,this.props);\r\n        \r\n        let path='/Tournament/'+gameName+'/';\r\n        //const { history } = this.props;\r\n         this.props.history.push(path);\r\n    }\r\n\r\n    render(){\r\n   \r\n    \r\n\r\n   return(\r\n       <div className={styles.Container}>\r\n            \r\n           {this.props.games.map((games,index)=>{\r\n                return (\r\n                    <div className={styles.card} key={index}>\r\n                            <h5 className={styles.cardTitle}>{games.gameName}</h5>\r\n                            <hr/>\r\n                            <p className={styles.cardText}>{games.gameDesc}</p>\r\n                        <button className={styles.btn} onClick={()=>{this.gameNameHandler(games.gameName)}}>Open Me</button>\r\n                    </div>\r\n                )\r\n            })}\r\n      \r\n       </div>\r\n   )\r\n    \r\n}\r\n\r\n}\r\nexport default withRouter(gamesShow);","const Auxilary=(props)=>{return props.children};\r\n\r\nexport default Auxilary;\r\n","import React, { Component } from 'react';\r\n\r\nimport gData from '../Asset/games.json';\r\nimport GamesShow from '../Components/Component/GamesShow';\r\nimport Auxilary from \"../HOC/Auxilary\";\r\n\r\n\r\nclass Games extends Component{\r\n\r\n    state={\r\n        games:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log(gData);\r\n        if(gData.length>0){\r\n            this.setState({games:gData});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Auxilary>\r\n                <GamesShow games={this.state.games} />\r\n            </Auxilary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Games;","import React,{Component} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nconst styles = {\r\n  fontFamily: \"sans-serif\",\r\n  textAlign: \"center\",\r\n  fontSize:\"18px\"\r\n};\r\n\r\nclass ModalExample extends Component {\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div style={styles}>\r\n      {/* <button onClick={this.onOpenModal}>Open modal</button> */}\r\n      <Modal open={this.props.show} onClose={this.props.close}>\r\n        <h2>Toornament</h2>\r\n        <p>\r\n         {this.props.res}\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalExample;\r\n\r\n","import React, { Component } from 'react';\r\nimport Auxilary from '../../HOC/Auxilary';\r\nimport styles from './TournamentsShow.module.css';\r\nimport axios from 'axios';\r\nimport ModalExample from '../Layouts/Modal';\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass TournamentsShow extends Component{\r\n    state={\r\n        response:\"\",\r\n        showModal:false,\r\n        maxPeeps:null\r\n    }\r\n\r\n    tournamentRegisterHandler=(gameName,tournamentName)=>{\r\n        let path=\"https://enigmatic-caverns-21701.herokuapp.com/bookTournaments/\"+gameName+\"/\"+tournamentName+\"/\";\r\n        axios.get(path).then(data=>{\r\n            console.log(data.data);\r\n            if(data.data.message!=null){\r\n            this.setState({response:data.data.message,showModal:true});\r\n            }\r\n        })\r\n    }\r\n    reRenderToornamentPage=()=>{\r\n      window.location.reload(true);\r\n    }\r\n\r\n    closeModal=()=>{\r\n     this.setState({showModal:false},this.reRenderToornamentPage);\r\n    }\r\n\r\n    render(){\r\n        let maxPeople=null;\r\n        const tournament=this.props.names.map((tournaments,index)=>{\r\n            if(tournaments.maxPeople<=20){\r\n                console.log(tournaments.maxPeople,index);\r\n                maxPeople=\"Only \"+ tournaments.maxPeople+\" seats is Left , Hurry Up !!!\" \r\n            }else{\r\n                maxPeople=null;\r\n            }\r\n            return(\r\n                <div key={index}>{ tournaments.maxPeople?\r\n                <div className={styles.card}>\r\n                                <h5 className={styles.title}>{tournaments.tournamentName}</h5>\r\n                                <h6 className={styles.desc}>{tournaments.tournamentDesc}</h6>\r\n                                <p className={styles.desc}><strong> Fees : </strong>Rs {tournaments.registrationFees} /-</p>\r\n                                <p className={!maxPeople?'padding-bottom:200px':styles.sale}>{maxPeople}</p>\r\n                                <button className={!maxPeople?styles.btn:styles.button} onClick={()=>{this.tournamentRegisterHandler(this.props.gameName,tournaments.tournamentName)}}>Register</button>\r\n                    </div>:null}\r\n                </div>\r\n\r\n            );\r\n        })\r\n        \r\n        return(\r\n            <Auxilary >\r\n                <div className={styles.container}> \r\n                    {tournament}\r\n                    {this.state.response? <ModalExample res={this.state.response} show={this.state.showModal} close={this.closeModal}/>:null}\r\n                </div>\r\n            </Auxilary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(TournamentsShow);","import React, { Component } from 'react';\r\nimport Auxilary from '../../HOC/Auxilary';\r\nimport axios from 'axios';\r\nimport TournamentsShow from './TournamentsShow';\r\nimport styles from './Tournaments.module.css';\r\n\r\n\r\nclass Tournaments extends Component{\r\n    state={\r\n        tournaments:[],\r\n        pageNumber:1\r\n    }\r\n\r\n    componentDidMount(){\r\n       // console.log(\"ninpno\");\r\n        \r\n        this.getGamesHandler(1);\r\n    }\r\n\r\n    getGamesHandler=(pageNumber)=>{\r\n        console.log(pageNumber);\r\n        \r\n        let path=\"https://enigmatic-caverns-21701.herokuapp.com/getGames/\"+this.props.match.params.id+\"/\"+pageNumber\r\n        axios.get(path).then(data=>{\r\n            //console.log(data.data[0]['gameArray'][0]);\r\n            this.setState({tournaments:data.data[0]['gameArray']});\r\n        })\r\n    }\r\n\r\n    handlePageChange=(pageNumber)=>{\r\n        //window.location.reload(true);\r\n        this.setState({activePage:pageNumber},this.getGamesHandler.bind(this,pageNumber))\r\n    }\r\n\r\n    pageDecrementHandler=()=>{\r\n        if(this.state.pageNumber>=2){\r\n            let pageReduce=this.state.pageNumber-1;\r\n            this.setState({pageNumber:pageReduce},this.getGamesHandler.bind(this,pageReduce));\r\n        }\r\n    }\r\n    pageIncrementHandler=()=>{\r\n        let pageIncrement=this.state.pageNumber+1;\r\n        this.setState({pageNumber:pageIncrement},this.getGamesHandler.bind(this,pageIncrement));\r\n    }\r\n    \r\n    render(){\r\n      return(\r\n            <Auxilary>\r\n                <div className={styles.paginator}>\r\n                    <button className={styles.btn} onClick={this.pageDecrementHandler}>LESS</button>\r\n                     <span>&nbsp;</span> {this.state.pageNumber} <span>&nbsp;</span>\r\n                    <button className={styles.btn} onClick={this.pageIncrementHandler}>MORE</button>\r\n                </div>\r\n              <TournamentsShow names={this.state.tournaments} gameName={this.props.match.params.id}></TournamentsShow>\r\n            </Auxilary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tournaments;","import React from 'react';\nimport './App.css';\nimport Games from './Containers/Games';\nimport {BrowserRouter} from 'react-router-dom';\nimport Tournaments from './Containers/Tournaments/Tournaments';\nimport {Route,Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    \n    <BrowserRouter>\n      <div className=\"App\">\n        {/* <Games/> */}\n      </div>\n\n      <Switch>\n          <Route exact path=\"/\"  component={Games}/>\n          <Route exact path=\"/Tournament/:id\" component={Tournaments}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import './bootstrap/less/bootstrap.less';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}